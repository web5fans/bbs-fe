@use '@/styles/rem';

$shadow: min(5px, #{rem.px2flexible(3)});
$inputFontSize: min(18px, #{rem.px2flexible(12)});
$inputPaddingLeft: min(20px, #{rem.px2flexible(13)});
$inputPaddingBottom: min(20px, #{rem.px2flexible(14.5)});
$inputPaddingTop: min(26px, #{rem.px2flexible(17.5)});
$inputWidth: rem.px2flexible(247);

@mixin err-style {
  color: var(--input-danger-text-color, var(--danger-color));
  border-color: var(--danger-color) !important;
  box-shadow: $shadow $shadow 0 0 var(--danger-color) inset;
}

.wrap {
  position: relative;
  line-height: 0;
  display: inline-flex;
  align-items: center;
  gap: rem.px2flexible(5);

  overflow: hidden;
  border: 1px solid var(--input-default-border-color, #000);

  box-shadow: $shadow $shadow 0 0 var(--input-default-shadow-color, #000) inset;
  background: #FFFFFF;
  padding-right: min(15px, #{rem.px2flexible(10)});
  padding-left: $inputPaddingLeft;
  padding-top: $shadow;
  //padding-block: rem.px2flexible(11);
  transition: all .1s;

  //width: $inputWidth;
  max-width: 500px;
  width: 100%;
  height: min(66px, #{rem.px2flexible(44)});

  &:focus-within,
  &.checkedPass {
    border: 1px solid var(--primary-color);
    box-shadow: $shadow $shadow 0 0 var(--primary-color) inset;
  }

  &.checkedPass {
    color: var(--primary-color);
  }

  &:focus-within {
    .caret {
      //display: block;
    }

    .lengthLimit {
      display: block;
    }

    &.lengthSuccess {
      border-color: var(--primary-color);

      .lengthLimit {
        color: var(--primary-color);
      }
    }
  }

  &.err {
    @include err-style;

    &:focus-within {
      @include err-style;
    }

    .lengthLimit {
      color: var(--danger-color);
    }
  }

  input {
    flex: 1;
    min-width: 0; // 修复safari flex:1不生效
    font-family: var(--font-CLFN);
    font-size: var(--input-font-size, $inputFontSize);
    outline: none;
    caret-color: transparent;

    &:focus-visible {
      &::placeholder {
        opacity: 0;
      }
    }

    &::placeholder {
      $placeholderSize: min(18px, #{rem.px2flexible(10)});

      font-size: var(--input-font-size, $placeholderSize);
      color: #CFCFCF;
    }
  }

  .icon {
    width: rem.px2flexible(14);
    height: rem.px2flexible(14);
  }

  .caret {
    display: none;
    position: absolute;
    bottom: var(--caret-bottom, $inputPaddingBottom);
    transform: translateY(rem.px2flexible(2));
    //left: calc(20px + var(--left-deviation));
    left: $inputPaddingLeft;
    height: rem.px2flexible(1);
    width: rem.px2flexible(6);
    background-color: var(--primary-color);
    will-change: left;
    animation: blink 1s infinite;
  }

  .hiddenSpan {
    font-size: $inputFontSize;
  }
}

.lengthLimit {
  display: none;
  font-size: rem.px2flexible(10);
  font-family: var(--font-CLFN);
  margin-left: rem.px2flexible(4);
}

@keyframes blink {
  0%, 100% { opacity: 1; }
  50% { opacity: 0; }
}